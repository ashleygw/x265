arm/dct8.h:void PFX(dct_4x4_neon)(const int16_t* src, int16_t* dst, intptr_t srcStride);
arm/dct8.h:void PFX(dct_8x8_neon)(const int16_t* src, int16_t* dst, intptr_t srcStride);
arm/dct8.h:void PFX(dct_16x16_neon)(const int16_t* src, int16_t* dst, intptr_t srcStride);
arm/ssd-a.S:function x265_pixel_sse_pp_4x4_neon
arm/ssd-a.S:function x265_pixel_sse_pp_8x8_neon
arm/ssd-a.S:function x265_pixel_sse_pp_16x16_neon
arm/ssd-a.S:function x265_pixel_sse_pp_32x32_neon
arm/ssd-a.S:function x265_pixel_sse_pp_64x64_neon
arm/ssd-a.S:function x265_pixel_sse_ss_4x4_neon
arm/ssd-a.S:function x265_pixel_sse_ss_8x8_neon
arm/ssd-a.S:function x265_pixel_sse_ss_16x16_neon
arm/ssd-a.S:function x265_pixel_sse_ss_32x32_neon
arm/ssd-a.S:function x265_pixel_sse_ss_64x64_neon
arm/ssd-a.S:function x265_pixel_ssd_s_4x4_neon
arm/ssd-a.S:function x265_pixel_ssd_s_8x8_neon
arm/ssd-a.S:function x265_pixel_ssd_s_16x16_neon
arm/ssd-a.S:function x265_pixel_ssd_s_32x32_neon
arm/pixel.h:int x265_pixel_sad_8x4_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_8x8_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_8x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_8x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_16x4_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_16x8_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_16x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_16x12_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_16x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_16x64_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_32x8_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_32x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_32x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_32x64_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_32x24_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_64x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_64x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_64x64_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_64x48_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_12x16_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_24x32_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:int x265_pixel_sad_48x64_neon(const pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/pixel.h:void x265_pixel_avg_pp_4x4_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_4x8_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_4x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_8x4_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_8x8_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_8x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_8x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_12x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_16x4_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_16x8_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_16x12_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_16x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_16x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_16x64_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_24x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_32x8_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_32x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_32x24_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_32x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_32x64_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_48x64_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_64x16_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_64x32_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_64x48_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_pixel_avg_pp_64x64_neon (pixel* dst, intptr_t dstride, const pixel* src0, intptr_t sstride0, const pixel* src1, intptr_t sstride1, int);
arm/pixel.h:void x265_sad_x3_4x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_4x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_4x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_8x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_8x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_8x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_8x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_12x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_16x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_16x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_16x12_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_16x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_16x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_16x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_24x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_32x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_32x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_32x24_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_32x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_32x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_48x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_64x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_64x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_64x48_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x3_64x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_4x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_4x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_4x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_8x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_8x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_8x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_8x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_12x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_16x4_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_16x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_16x12_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_16x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_16x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_16x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_24x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_32x8_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_32x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_32x24_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_32x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_32x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_48x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_64x16_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_64x32_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_64x48_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:void x265_sad_x4_64x64_neon(const pixel* fenc, const pixel* fref0, const pixel* fref1, const pixel* fref2, const pixel* fref3, intptr_t frefstride, int32_t* res);
arm/pixel.h:sse_t x265_pixel_sse_pp_4x4_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_pp_8x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_pp_16x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_pp_32x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_pp_64x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_ss_4x4_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_ss_8x8_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_ss_16x16_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_ss_32x32_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_sse_ss_64x64_neon(const int16_t* pix1, intptr_t stride_pix1, const int16_t* pix2, intptr_t stride_pix2);
arm/pixel.h:sse_t x265_pixel_ssd_s_4x4_neon(const int16_t* a, intptr_t dstride);
arm/pixel.h:sse_t x265_pixel_ssd_s_8x8_neon(const int16_t* a, intptr_t dstride);
arm/pixel.h:sse_t x265_pixel_ssd_s_16x16_neon(const int16_t* a, intptr_t dstride);
arm/pixel.h:sse_t x265_pixel_ssd_s_32x32_neon(const int16_t* a, intptr_t dstride);
arm/pixel.h:sse_t x265_pixel_ssd_s_64x64_neon(const int16_t* a, intptr_t dstride);
arm/pixel.h:void x265_pixel_sub_ps_4x4_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_sub_ps_8x8_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_sub_ps_16x16_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_sub_ps_32x32_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_sub_ps_64x64_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_sub_ps_4x8_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_sub_ps_8x16_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_sub_ps_16x32_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_sub_ps_32x64_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_4x4_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_8x8_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_16x16_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_32x32_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_64x64_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_4x8_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_8x16_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_16x32_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_add_ps_32x64_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel.h:void x265_pixel_planecopy_cp_neon(const uint8_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int width, int height, int shift);
arm/pixel.h:void x265_addAvg_4x4_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_4x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_4x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_8x4_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_8x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_8x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_8x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_12x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_16x4_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_16x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_16x12_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_16x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_16x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_16x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_24x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_32x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_32x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_32x24_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_32x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_32x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_48x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_64x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_64x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_64x48_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_64x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_4x2_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_4x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_6x8_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_6x16_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_8x2_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_8x6_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_8x12_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_8x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_12x32_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_16x24_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_24x64_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/pixel.h:void x265_addAvg_32x48_neon(const int16_t* src0, const int16_t* src1, pixel* dst, intptr_t src0Stride, intptr_t src1Stride, intptr_t dstStride);
arm/mc-a.S:function x265_blockcopy_pp_16x16_neon
arm/mc-a.S:.macro blockcopy_pp_4xN_neon h
arm/mc-a.S:function x265_blockcopy_pp_4x\h\()_neon
arm/mc-a.S:blockcopy_pp_4xN_neon 4
arm/mc-a.S:blockcopy_pp_4xN_neon 8
arm/mc-a.S:blockcopy_pp_4xN_neon 16
arm/mc-a.S:blockcopy_pp_4xN_neon 2
arm/mc-a.S:blockcopy_pp_4xN_neon 32
arm/mc-a.S:.macro blockcopy_pp_16xN_neon h
arm/mc-a.S:function x265_blockcopy_pp_16x\h\()_neon
arm/mc-a.S:blockcopy_pp_16xN_neon 4
arm/mc-a.S:blockcopy_pp_16xN_neon 8
arm/mc-a.S:blockcopy_pp_16xN_neon 12
arm/mc-a.S:blockcopy_pp_16xN_neon 24
arm/mc-a.S:.macro blockcopy_pp_16xN1_neon h i
arm/mc-a.S:function x265_blockcopy_pp_16x\h\()_neon
arm/mc-a.S:blockcopy_pp_16xN1_neon 32 4
arm/mc-a.S:blockcopy_pp_16xN1_neon 64 8
arm/mc-a.S:.macro blockcopy_pp_8xN_neon h
arm/mc-a.S:function x265_blockcopy_pp_8x\h\()_neon
arm/mc-a.S:blockcopy_pp_8xN_neon 4
arm/mc-a.S:blockcopy_pp_8xN_neon 8
arm/mc-a.S:blockcopy_pp_8xN_neon 16
arm/mc-a.S:blockcopy_pp_8xN_neon 32
arm/mc-a.S:blockcopy_pp_8xN_neon 2
arm/mc-a.S:blockcopy_pp_8xN_neon 6
arm/mc-a.S:blockcopy_pp_8xN_neon 12
arm/mc-a.S:function x265_blockcopy_pp_12x16_neon
arm/mc-a.S:function x265_blockcopy_pp_24x32_neon
arm/mc-a.S:function x265_blockcopy_pp_32x8_neon
arm/mc-a.S:.macro blockcopy_pp_32xN_neon h i
arm/mc-a.S:function x265_blockcopy_pp_32x\h\()_neon
arm/mc-a.S:blockcopy_pp_32xN_neon 16 2
arm/mc-a.S:blockcopy_pp_32xN_neon 24 3
arm/mc-a.S:blockcopy_pp_32xN_neon 32 4
arm/mc-a.S:blockcopy_pp_32xN_neon 64 8
arm/mc-a.S:blockcopy_pp_32xN_neon 48 6
arm/mc-a.S:function x265_blockcopy_pp_48x64_neon
arm/mc-a.S:.macro blockcopy_pp_64xN_neon h i
arm/mc-a.S:function x265_blockcopy_pp_64x\h\()_neon
arm/mc-a.S:blockcopy_pp_64xN_neon 16 4
arm/mc-a.S:blockcopy_pp_64xN_neon 32 8
arm/mc-a.S:blockcopy_pp_64xN_neon 48 12
arm/mc-a.S:blockcopy_pp_64xN_neon 64 16
arm/mc-a.S:.macro blockcopy_pp_2xN_neon h
arm/mc-a.S:function x265_blockcopy_pp_2x\h\()_neon
arm/mc-a.S:blockcopy_pp_2xN_neon 4
arm/mc-a.S:blockcopy_pp_2xN_neon 8
arm/mc-a.S:blockcopy_pp_2xN_neon 16
arm/mc-a.S:.macro blockcopy_pp_6xN_neon h i
arm/mc-a.S:function x265_blockcopy_pp_6x\h\()_neon
arm/mc-a.S:blockcopy_pp_6xN_neon 8 4
arm/mc-a.S:blockcopy_pp_6xN_neon 16 8
arm/mc-a.S:function x265_blockcopy_pp_8x64_neon
arm/mc-a.S:function x265_blockcopy_pp_12x32_neon
arm/mc-a.S:function x265_blockcopy_pp_24x64_neon
arm/mc-a.S:.macro pixel_avg_pp_4xN_neon h
arm/mc-a.S:function x265_pixel_avg_pp_4x\h\()_neon
arm/mc-a.S:pixel_avg_pp_4xN_neon 4
arm/mc-a.S:pixel_avg_pp_4xN_neon 8
arm/mc-a.S:pixel_avg_pp_4xN_neon 16
arm/mc-a.S:.macro pixel_avg_pp_8xN_neon h
arm/mc-a.S:function x265_pixel_avg_pp_8x\h\()_neon
arm/mc-a.S:pixel_avg_pp_8xN_neon 4
arm/mc-a.S:pixel_avg_pp_8xN_neon 8
arm/mc-a.S:pixel_avg_pp_8xN_neon 16
arm/mc-a.S:pixel_avg_pp_8xN_neon 32
arm/mc-a.S:function x265_pixel_avg_pp_12x16_neon
arm/mc-a.S:.macro pixel_avg_pp_16xN_neon h
arm/mc-a.S:function x265_pixel_avg_pp_16x\h\()_neon
arm/mc-a.S:pixel_avg_pp_16xN_neon 4
arm/mc-a.S:pixel_avg_pp_16xN_neon 8
arm/mc-a.S:pixel_avg_pp_16xN_neon 12
arm/mc-a.S:pixel_avg_pp_16xN_neon 16
arm/mc-a.S:pixel_avg_pp_16xN_neon 32
arm/mc-a.S:function x265_pixel_avg_pp_16x64_neon
arm/mc-a.S:function x265_pixel_avg_pp_24x32_neon
arm/mc-a.S:.macro pixel_avg_pp_32xN_neon h
arm/mc-a.S:function x265_pixel_avg_pp_32x\h\()_neon
arm/mc-a.S:pixel_avg_pp_32xN_neon 8
arm/mc-a.S:pixel_avg_pp_32xN_neon 16
arm/mc-a.S:pixel_avg_pp_32xN_neon 24
arm/mc-a.S:.macro pixel_avg_pp_32xN1_neon h i
arm/mc-a.S:function x265_pixel_avg_pp_32x\h\()_neon
arm/mc-a.S:pixel_avg_pp_32xN1_neon 32 4 
arm/mc-a.S:pixel_avg_pp_32xN1_neon 64 8
arm/mc-a.S:function x265_pixel_avg_pp_48x64_neon
arm/mc-a.S:.macro pixel_avg_pp_64xN_neon h i
arm/mc-a.S:function x265_pixel_avg_pp_64x\h\()_neon
arm/mc-a.S:pixel_avg_pp_64xN_neon 16 4
arm/mc-a.S:pixel_avg_pp_64xN_neon 32 8
arm/mc-a.S:pixel_avg_pp_64xN_neon 48 12
arm/mc-a.S:pixel_avg_pp_64xN_neon 64 16
arm/mc-a.S:// void x265_cpy2Dto1D_shr_4x4_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift)
arm/mc-a.S:function x265_cpy2Dto1D_shr_4x4_neon
arm/mc-a.S:function x265_cpy2Dto1D_shr_8x8_neon
arm/mc-a.S:function x265_cpy2Dto1D_shr_16x16_neon
arm/mc-a.S:function x265_cpy2Dto1D_shr_32x32_neon
arm/mc-a.S:function x265_addAvg_8x\h\()_neon
arm/mc-a.S:function x265_addAvg_4x4_neon
arm/mc-a.S:function x265_addAvg_4x\h\()_neon
arm/mc-a.S:function x265_addAvg_6x\h\()_neon
arm/mc-a.S:function x265_addAvg_12x16_neon
arm/mc-a.S:function x265_addAvg_12x32_neon
arm/mc-a.S:function x265_addAvg_16x\h\()_neon
arm/mc-a.S:function x265_addAvg_24x32_neon
arm/mc-a.S:function x265_addAvg_24x64_neon
arm/mc-a.S:function x265_addAvg_32x\h\()_neon
arm/mc-a.S:function x265_addAvg_48x64_neon
arm/mc-a.S:function x265_addAvg_64x16_neon
arm/mc-a.S:function x265_addAvg_64x32_neon
arm/mc-a.S:function x265_addAvg_64x48_neon
arm/mc-a.S:function x265_addAvg_64x64_neon
arm/blockcopy8.h:void x265_blockcopy_pp_16x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_8x4_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_8x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_8x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_8x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_12x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_4x4_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_4x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_4x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_16x4_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_16x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_16x12_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_16x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_16x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_24x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_32x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_32x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_32x24_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_32x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_32x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_48x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_64x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_64x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_64x48_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_64x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_2x4_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_2x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_2x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_6x8_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_6x16_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_8x2_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_8x6_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_8x12_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_8x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_12x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_4x2_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_4x32_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_16x24_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_24x64_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_blockcopy_pp_32x48_neon(pixel* dst, intptr_t dstStride, const pixel* src, intptr_t srcStride);
arm/blockcopy8.h:void x265_cpy2Dto1D_shr_4x4_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);
arm/blockcopy8.h:void x265_cpy2Dto1D_shr_8x8_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);
arm/blockcopy8.h:void x265_cpy2Dto1D_shr_16x16_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);
arm/blockcopy8.h:void x265_cpy2Dto1D_shr_32x32_neon(int16_t* dst, const int16_t* src, intptr_t srcStride, int shift);
arm/blockcopy8.h:void x265_blockcopy_sp_4x4_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_sp_8x8_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_sp_16x16_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_sp_32x32_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_sp_64x64_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_4x4_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_8x8_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_16x16_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_32x32_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_64x64_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_4x4_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_8x8_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_16x16_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_32x32_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_64x64_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_4x8_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_8x16_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_16x32_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ss_32x64_neon(int16_t* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_sp_4x8_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_sp_8x16_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_sp_16x32_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_sp_32x64_neon(pixel* a, intptr_t stridea, const int16_t* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_4x8_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_8x16_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_16x32_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockcopy_ps_32x64_neon(int16_t* a, intptr_t stridea, const pixel* b, intptr_t strideb);
arm/blockcopy8.h:void x265_blockfill_s_4x4_neon(int16_t* dst, intptr_t dstride, int16_t val);
arm/blockcopy8.h:void x265_blockfill_s_8x8_neon(int16_t* dst, intptr_t dstride, int16_t val);
arm/blockcopy8.h:void x265_blockfill_s_16x16_neon(int16_t* dst, intptr_t dstride, int16_t val);
arm/blockcopy8.h:void x265_blockfill_s_32x32_neon(int16_t* dst, intptr_t dstride, int16_t val);
arm/blockcopy8.h:uint32_t x265_copy_cnt_4_neon(int16_t* coeff, const int16_t* residual, intptr_t resiStride);
arm/blockcopy8.h:uint32_t x265_copy_cnt_8_neon(int16_t* coeff, const int16_t* residual, intptr_t resiStride);
arm/blockcopy8.h:uint32_t x265_copy_cnt_16_neon(int16_t* coeff, const int16_t* residual, intptr_t resiStride);
arm/blockcopy8.h:uint32_t x265_copy_cnt_32_neon(int16_t* coeff, const int16_t* residual, intptr_t resiStride);
arm/blockcopy8.h:int x265_count_nonzero_4_neon(const int16_t* quantCoeff);
arm/blockcopy8.h:int x265_count_nonzero_8_neon(const int16_t* quantCoeff);
arm/blockcopy8.h:int x265_count_nonzero_16_neon(const int16_t* quantCoeff);
arm/blockcopy8.h:int x265_count_nonzero_32_neon(const int16_t* quantCoeff);
arm/pixel-util.S:function x265_pixel_var_8x8_neon
arm/pixel-util.S:function x265_pixel_var_16x16_neon
arm/pixel-util.S:function x265_pixel_var_32x32_neon
arm/pixel-util.S:function x265_pixel_var_64x64_neon
arm/pixel-util.S:/* void getResidual4_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);
arm/pixel-util.S:function x265_getResidual4_neon
arm/pixel-util.S:function x265_getResidual8_neon
arm/pixel-util.S:function x265_getResidual16_neon
arm/pixel-util.S:function x265_getResidual32_neon
arm/pixel-util.S:// void pixel_sub_ps_neon(int16_t* a, intptr_t dstride, const pixel* b0, const pixel* b1, intptr_t sstride0, intptr_t sstride1)
arm/pixel-util.S:function x265_pixel_sub_ps_4x4_neon
arm/pixel-util.S:function x265_pixel_sub_ps_8x8_neon
arm/pixel-util.S:function x265_pixel_sub_ps_16x16_neon
arm/pixel-util.S:function x265_pixel_sub_ps_32x32_neon
arm/pixel-util.S:function x265_pixel_sub_ps_64x64_neon
arm/pixel-util.S:function x265_pixel_sub_ps_4x8_neon
arm/pixel-util.S:function x265_pixel_sub_ps_8x16_neon
arm/pixel-util.S:function x265_pixel_sub_ps_16x32_neon
arm/pixel-util.S:function x265_pixel_sub_ps_32x64_neon
arm/pixel-util.S:// void x265_pixel_add_ps_neon(pixel* a, intptr_t dstride, const pixel* b0, const int16_t* b1, intptr_t sstride0, intptr_t sstride1);
arm/pixel-util.S:function x265_pixel_add_ps_4x4_neon
arm/pixel-util.S:function x265_pixel_add_ps_8x8_neon
arm/pixel-util.S:.macro pixel_add_ps_16xN_neon h i
arm/pixel-util.S:function x265_pixel_add_ps_16x\h\()_neon
arm/pixel-util.S:pixel_add_ps_16xN_neon 16 2
arm/pixel-util.S:pixel_add_ps_16xN_neon 32 4
arm/pixel-util.S:.macro pixel_add_ps_32xN_neon h i
arm/pixel-util.S: function x265_pixel_add_ps_32x\h\()_neon
arm/pixel-util.S:pixel_add_ps_32xN_neon 32 8
arm/pixel-util.S:pixel_add_ps_32xN_neon 64 16
arm/pixel-util.S:function x265_pixel_add_ps_64x64_neon
arm/pixel-util.S:function x265_pixel_add_ps_4x8_neon
arm/pixel-util.S:function x265_pixel_add_ps_8x16_neon
arm/pixel-util.S:function x265_scale1D_128to64_neon 
arm/pixel-util.S:function x265_scale2D_64to32_neon
arm/pixel-util.S:function x265_pixel_planecopy_cp_neon
arm/pixel-util.S:.macro satd_4x4_neon
arm/pixel-util.S:function x265_pixel_satd_4x4_neon
arm/pixel-util.S:    satd_4x4_neon
arm/pixel-util.S:.macro x265_satd_4x8_8x4_end_neon
arm/pixel-util.S:.macro pixel_satd_4x8_neon
arm/pixel-util.S:    x265_satd_4x8_8x4_end_neon
arm/pixel-util.S:function x265_pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:function x265_pixel_satd_4x16_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:function x265_pixel_satd_4x32_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:function x265_pixel_satd_12x16_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:function x265_pixel_satd_12x32_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:function x265_pixel_satd_8x4_neon
arm/pixel-util.S:    satd_4x4_neon
arm/pixel-util.S:    satd_4x4_neon
arm/pixel-util.S:function x265_pixel_satd_8x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:    pixel_satd_4x8_neon
arm/pixel-util.S:function x265_pixel_satd_8x12_neon
arm/pixel-util.S:    satd_4x4_neon
arm/pixel-util.S:    satd_4x4_neon
arm/pixel-util.S:    satd_4x4_neon
arm/pixel-util.S:    satd_4x4_neon
arm/pixel-util.S:function x265_pixel_satd_8x16_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:function x265_pixel_satd_8x32_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:function x265_pixel_satd_8x64_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:function x265_satd_8x8_neon
arm/pixel-util.S:function x265_satd_8x4v_8x8h_neon, export=0
arm/pixel-util.S:function x265_satd_16x4_neon, export=0
arm/pixel-util.S:    b               x265_satd_8x4v_8x8h_neon
arm/pixel-util.S:function x265_pixel_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:function x265_pixel_satd_16x8_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:function x265_pixel_satd_16x12_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:function x265_pixel_satd_16x16_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:function x265_pixel_satd_16x24_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:.macro pixel_satd_16x32_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:function x265_pixel_satd_16x32_neon
arm/pixel-util.S:    pixel_satd_16x32_neon
arm/pixel-util.S:function x265_pixel_satd_16x64_neon
arm/pixel-util.S:    pixel_satd_16x32_neon
arm/pixel-util.S:    pixel_satd_16x32_neon
arm/pixel-util.S:function x265_pixel_satd_24x32_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:function x265_pixel_satd_24x64_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:    bl              x265_satd_8x8_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:    bl              x265_satd_16x4_neon
arm/pixel-util.S:function x265_pixel_satd_32x8_neon
arm/pixel-util.S:.macro satd_32x16_neon
arm/pixel-util.S:function x265_pixel_satd_32x16_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:function x265_pixel_satd_32x24_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:function x265_pixel_satd_32x32_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:function x265_pixel_satd_32x48_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:function x265_pixel_satd_32x64_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:.macro satd_64x16_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:function x265_pixel_satd_64x16_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:function x265_pixel_satd_64x32_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:function x265_pixel_satd_64x48_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:function x265_pixel_satd_64x64_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:    satd_64x16_neon
arm/pixel-util.S:function x265_pixel_satd_48x64_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:    satd_32x16_neon
arm/pixel-util.S:    pixel_satd_16x32_neon
arm/pixel-util.S:    pixel_satd_16x32_neon
arm/pixel-util.S:function x265_sa8d_\satd\()8x8_neon, export=0
arm/pixel-util.S:function x265_pixel_sa8d_8x8_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:function x265_pixel_sa8d_8x16_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:function x265_pixel_sa8d_16x16_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:function x265_quant_neon
arm/pixel-util.S:function x265_nquant_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:    bl              x265_sa8d_8x8_neon
arm/pixel-util.S:function x265_pixel_sa8d_16x32_neon
arm/pixel-util.S:function x265_pixel_sa8d_32x32_neon
arm/pixel-util.S:function x265_pixel_sa8d_32x64_neon
arm/pixel-util.S:function x265_pixel_sa8d_64x64_neon
arm/pixel-util.S:function x265_dequant_scaling_neon
arm/pixel-util.S:function x265_dequant_normal_neon
arm/pixel-util.S:// void x265_ssim_4x4x2_core_neon(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4]);
arm/pixel-util.S:function x265_ssim_4x4x2_core_neon
arm/pixel-util.S:function x265_psyCost_4x4_neon
arm/pixel-util.S:function x265_psyCost_8x8_neon
arm/pixel-util.h:uint64_t x265_pixel_var_8x8_neon(const pixel* pix, intptr_t stride);
arm/pixel-util.h:uint64_t x265_pixel_var_16x16_neon(const pixel* pix, intptr_t stride);
arm/pixel-util.h:uint64_t x265_pixel_var_32x32_neon(const pixel* pix, intptr_t stride);
arm/pixel-util.h:uint64_t x265_pixel_var_64x64_neon(const pixel* pix, intptr_t stride);
arm/pixel-util.h:void x265_getResidual4_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);
arm/pixel-util.h:void x265_getResidual8_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);
arm/pixel-util.h:void x265_getResidual16_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);
arm/pixel-util.h:void x265_getResidual32_neon(const pixel* fenc, const pixel* pred, int16_t* residual, intptr_t stride);
arm/pixel-util.h:void x265_scale1D_128to64_neon(pixel *dst, const pixel *src);
arm/pixel-util.h:void x265_scale2D_64to32_neon(pixel* dst, const pixel* src, intptr_t stride);
arm/pixel-util.h:int x265_pixel_satd_4x4_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_4x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_4x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_4x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_8x4_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_8x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_8x12_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_8x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_8x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_8x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_12x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_12x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_16x4_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_16x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_16x12_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_16x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_16x24_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_16x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_16x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_24x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_24x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_32x8_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_32x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_32x24_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_32x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_32x48_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_32x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_48x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_64x16_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_64x32_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_64x48_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_satd_64x64_neon(const pixel* pix1, intptr_t stride_pix1, const pixel* pix2, intptr_t stride_pix2);
arm/pixel-util.h:int x265_pixel_sa8d_8x8_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);
arm/pixel-util.h:int x265_pixel_sa8d_8x16_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);
arm/pixel-util.h:int x265_pixel_sa8d_16x16_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);
arm/pixel-util.h:int x265_pixel_sa8d_16x32_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);
arm/pixel-util.h:int x265_pixel_sa8d_32x32_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);
arm/pixel-util.h:int x265_pixel_sa8d_32x64_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);
arm/pixel-util.h:int x265_pixel_sa8d_64x64_neon(const pixel* pix1, intptr_t i_pix1, const pixel* pix2, intptr_t i_pix2);
arm/pixel-util.h:uint32_t x265_quant_neon(const int16_t* coef, const int32_t* quantCoeff, int32_t* deltaU, int16_t* qCoef, int qBits, int add, int numCoeff);
arm/pixel-util.h:uint32_t x265_nquant_neon(const int16_t* coef, const int32_t* quantCoeff, int16_t* qCoef, int qBits, int add, int numCoeff);
arm/pixel-util.h:void x265_dequant_scaling_neon(const int16_t* quantCoef, const int32_t* deQuantCoef, int16_t* coef, int num, int per, int shift);
arm/pixel-util.h:void x265_dequant_normal_neon(const int16_t* quantCoef, int16_t* coef, int num, int scale, int shift);
arm/pixel-util.h:void x265_ssim_4x4x2_core_neon(const pixel* pix1, intptr_t stride1, const pixel* pix2, intptr_t stride2, int sums[2][4]);
arm/pixel-util.h:int PFX(psyCost_4x4_neon)(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride);
arm/pixel-util.h:int PFX(psyCost_8x8_neon)(const pixel* source, intptr_t sstride, const pixel* recon, intptr_t rstride);
arm/blockcopy8.S:function x265_blockcopy_sp_4x4_neon
arm/blockcopy8.S:function x265_blockcopy_sp_8x8_neon
arm/blockcopy8.S:function x265_blockcopy_sp_16x16_neon
arm/blockcopy8.S:function x265_blockcopy_sp_32x32_neon
arm/blockcopy8.S:function x265_blockcopy_sp_64x64_neon
arm/blockcopy8.S:function x265_blockcopy_ps_4x4_neon
arm/blockcopy8.S:function x265_blockcopy_ps_8x8_neon
arm/blockcopy8.S:function x265_blockcopy_ps_16x16_neon
arm/blockcopy8.S:function x265_blockcopy_ps_32x32_neon
arm/blockcopy8.S:function x265_blockcopy_ps_64x64_neon
arm/blockcopy8.S:function x265_blockcopy_ss_4x4_neon
arm/blockcopy8.S:function x265_blockcopy_ss_8x8_neon
arm/blockcopy8.S:function x265_blockcopy_ss_16x16_neon
arm/blockcopy8.S:function x265_blockcopy_ss_32x32_neon
arm/blockcopy8.S:function x265_blockcopy_ss_64x64_neon
arm/blockcopy8.S:function x265_blockcopy_ss_4x8_neon
arm/blockcopy8.S:function x265_blockcopy_ss_8x16_neon
arm/blockcopy8.S:function x265_blockcopy_ss_16x32_neon
arm/blockcopy8.S:function x265_blockcopy_ss_32x64_neon
arm/blockcopy8.S:function x265_blockcopy_ps_4x8_neon
arm/blockcopy8.S:function x265_blockcopy_ps_8x16_neon
arm/blockcopy8.S:function x265_blockcopy_ps_16x32_neon
arm/blockcopy8.S:function x265_blockcopy_ps_32x64_neon
arm/blockcopy8.S:function x265_blockcopy_sp_4x8_neon
arm/blockcopy8.S:function x265_blockcopy_sp_8x16_neon
arm/blockcopy8.S:function x265_blockcopy_sp_16x32_neon
arm/blockcopy8.S:function x265_blockcopy_sp_32x64_neon
arm/blockcopy8.S:// void x265_blockfill_s_neon(int16_t* dst, intptr_t dstride, int16_t val)
arm/blockcopy8.S:function x265_blockfill_s_4x4_neon
arm/blockcopy8.S:function x265_blockfill_s_8x8_neon
arm/blockcopy8.S:function x265_blockfill_s_16x16_neon
arm/blockcopy8.S:function x265_blockfill_s_32x32_neon
arm/blockcopy8.S:function x265_copy_cnt_4_neon
arm/blockcopy8.S:function x265_copy_cnt_8_neon
arm/blockcopy8.S:function x265_copy_cnt_16_neon
arm/blockcopy8.S:function x265_copy_cnt_32_neon
arm/blockcopy8.S:function x265_count_nonzero_4_neon
arm/blockcopy8.S:function x265_count_nonzero_8_neon
arm/blockcopy8.S:function x265_count_nonzero_16_neon
arm/blockcopy8.S:function x265_count_nonzero_32_neon
arm/ipfilter8.S:function x265_filterPixelToShort_4x4_neon
arm/ipfilter8.S:function x265_filterPixelToShort_4x8_neon
arm/ipfilter8.S:function x265_filterPixelToShort_4x16_neon
arm/ipfilter8.S:function x265_filterPixelToShort_8x4_neon
arm/ipfilter8.S:function x265_filterPixelToShort_8x8_neon
arm/ipfilter8.S:function x265_filterPixelToShort_8x16_neon
arm/ipfilter8.S:function x265_filterPixelToShort_8x32_neon
arm/ipfilter8.S:function x265_filterPixelToShort_12x16_neon
arm/ipfilter8.S:function x265_filterPixelToShort_16x4_neon
arm/ipfilter8.S:function x265_filterPixelToShort_16x8_neon
arm/ipfilter8.S:function x265_filterPixelToShort_16x12_neon
arm/ipfilter8.S:function x265_filterPixelToShort_16x16_neon
arm/ipfilter8.S:function x265_filterPixelToShort_16x32_neon
arm/ipfilter8.S:function x265_filterPixelToShort_16x64_neon
arm/ipfilter8.S:function x265_filterPixelToShort_24x32_neon
arm/ipfilter8.S:function x265_filterPixelToShort_32x8_neon
arm/ipfilter8.S:function x265_filterPixelToShort_32x16_neon
arm/ipfilter8.S:function x265_filterPixelToShort_32x24_neon
arm/ipfilter8.S:function x265_filterPixelToShort_32x32_neon
arm/ipfilter8.S:function x265_filterPixelToShort_32x64_neon
arm/ipfilter8.S:function x265_filterPixelToShort_64x16_neon
arm/ipfilter8.S:function x265_filterPixelToShort_64x32_neon
arm/ipfilter8.S:function x265_filterPixelToShort_64x48_neon
arm/ipfilter8.S:function x265_filterPixelToShort_64x64_neon
arm/ipfilter8.S:function x265_filterPixelToShort_48x64_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_pp_4x\h\()_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_pp_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_pp_12x16_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_sp_4x\h\()_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_sp_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_sp_12x16_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_ps_4x\h\()_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_ps_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_8tap_vert_ps_12x16_neon
arm/ipfilter8.S:function x265_interp_4tap_vert_pp_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_4tap_vert_ps_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_4tap_vert_sp_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_horiz_pp_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_horiz_ps_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_4tap_horiz_pp_\w\()x\h\()_neon
arm/ipfilter8.S:function x265_interp_4tap_horiz_ps_\w\()x\h\()_neon
arm/cpu-a.S:function x265_cpu_neon_test
arm/cpu-a.S:function x265_cpu_fast_neon_mrc_test
arm/ipfilter8.h:void x265_filterPixelToShort_4x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_4x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_4x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_12x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_filterPixelToShort_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_4x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_4x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_4x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_8x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_8x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_8x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_8x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_16x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_16x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_16x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_16x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_16x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_16x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_32x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_32x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_32x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_32x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_32x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_64x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_64x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_64x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_64x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_24x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_48x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_pp_12x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_4x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_4x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_4x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_8x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_8x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_8x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_8x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_16x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_16x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_16x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_16x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_16x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_16x12_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_32x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_32x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_32x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_32x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_32x24_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_64x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_64x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_64x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_64x48_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_24x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_48x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_sp_12x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_4x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_4x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_4x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_8tap_vert_ps_12x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_8x2_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_8x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_8x6_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_8x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_8x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_8x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_8x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_8x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_16x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_16x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_16x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_16x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_16x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_16x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_16x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_32x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_32x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_32x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_32x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_32x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_32x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_24x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_24x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_48x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_64x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_64x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_64x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_pp_64x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_8x2_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_8x6_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_8x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_8x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_16x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_32x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_24x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_ps_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_8x2_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_8x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_8x6_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_8x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_8x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_8x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_8x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_8x12_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_16x4_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_16x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_16x12_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_16x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_16x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_16x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_16x24_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_32x8_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_32x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_32x24_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_32x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_32x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_32x48_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_24x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_24x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_48x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_64x16_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_64x32_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_64x64_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_vert_sp_64x48_neon(const int16_t* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_4x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_4x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_4x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_8x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_8x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_8x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_8x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_12x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_16x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_16x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_16x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_16x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_16x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_16x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_24x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_32x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_32x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_32x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_32x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_32x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_48x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_64x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_64x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_64x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_pp_64x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_horiz_ps_4x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_4x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_4x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_12x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_horiz_ps_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_4x2_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_4x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_4x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_4x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_4x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_8x2_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_8x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_8x6_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_8x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_8x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_8x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_8x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_8x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_12x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_12x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_16x4_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_16x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_16x12_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_16x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_16x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_16x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_16x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_24x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_24x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_32x8_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_32x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_32x24_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_32x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_32x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_32x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_48x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_64x16_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_64x32_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_64x48_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_pp_64x64_neon(const pixel* src, intptr_t srcStride, pixel* dst, intptr_t dstStride, int coeffIdx);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_4x2_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_4x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_4x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_4x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_4x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_8x2_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_8x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_8x6_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_8x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_8x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_8x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_8x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_8x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_12x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_12x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_16x4_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_16x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_16x12_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_16x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_16x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_16x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_16x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_24x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_24x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_32x8_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_32x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_32x24_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_32x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_32x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_32x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_48x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_64x16_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_64x32_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_64x48_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/ipfilter8.h:void x265_interp_4tap_horiz_ps_64x64_neon(const pixel* src, intptr_t srcStride, int16_t* dst, intptr_t dstStride, int coeffIdx, int isRowExt);
arm/asm-primitives.cpp:        p.ssim_4x4x2_core = PFX(ssim_4x4x2_core_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x4].addAvg[ALIGNED]   = PFX(addAvg_4x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x8].addAvg[ALIGNED]   = PFX(addAvg_4x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x16].addAvg[ALIGNED]  = PFX(addAvg_4x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x4].addAvg[ALIGNED]   = PFX(addAvg_8x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x8].addAvg[ALIGNED]   = PFX(addAvg_8x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x16].addAvg[ALIGNED]  = PFX(addAvg_8x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x32].addAvg[ALIGNED]  = PFX(addAvg_8x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_12x16].addAvg[ALIGNED] = PFX(addAvg_12x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x4].addAvg[ALIGNED]  = PFX(addAvg_16x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x8].addAvg[ALIGNED]  = PFX(addAvg_16x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x12].addAvg[ALIGNED] = PFX(addAvg_16x12_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x16].addAvg[ALIGNED] = PFX(addAvg_16x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x32].addAvg[ALIGNED] = PFX(addAvg_16x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x64].addAvg[ALIGNED] = PFX(addAvg_16x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_24x32].addAvg[ALIGNED] = PFX(addAvg_24x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x8].addAvg[ALIGNED]  = PFX(addAvg_32x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x16].addAvg[ALIGNED] = PFX(addAvg_32x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x24].addAvg[ALIGNED] = PFX(addAvg_32x24_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x32].addAvg[ALIGNED] = PFX(addAvg_32x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x64].addAvg[ALIGNED] = PFX(addAvg_32x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_48x64].addAvg[ALIGNED] = PFX(addAvg_48x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x16].addAvg[ALIGNED] = PFX(addAvg_64x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x32].addAvg[ALIGNED] = PFX(addAvg_64x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x48].addAvg[ALIGNED] = PFX(addAvg_64x48_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x64].addAvg[ALIGNED] = PFX(addAvg_64x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x4].addAvg[NONALIGNED]   = PFX(addAvg_4x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x8].addAvg[NONALIGNED]   = PFX(addAvg_4x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x16].addAvg[NONALIGNED]  = PFX(addAvg_4x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x4].addAvg[NONALIGNED]   = PFX(addAvg_8x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x8].addAvg[NONALIGNED]   = PFX(addAvg_8x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x16].addAvg[NONALIGNED]  = PFX(addAvg_8x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x32].addAvg[NONALIGNED]  = PFX(addAvg_8x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_12x16].addAvg[NONALIGNED] = PFX(addAvg_12x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x4].addAvg[NONALIGNED]  = PFX(addAvg_16x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x8].addAvg[NONALIGNED]  = PFX(addAvg_16x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x12].addAvg[NONALIGNED] = PFX(addAvg_16x12_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x16].addAvg[NONALIGNED] = PFX(addAvg_16x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x32].addAvg[NONALIGNED] = PFX(addAvg_16x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x64].addAvg[NONALIGNED] = PFX(addAvg_16x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_24x32].addAvg[NONALIGNED] = PFX(addAvg_24x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x8].addAvg[NONALIGNED]  = PFX(addAvg_32x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x16].addAvg[NONALIGNED] = PFX(addAvg_32x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x24].addAvg[NONALIGNED] = PFX(addAvg_32x24_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x32].addAvg[NONALIGNED] = PFX(addAvg_32x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x64].addAvg[NONALIGNED] = PFX(addAvg_32x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_48x64].addAvg[NONALIGNED] = PFX(addAvg_48x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x16].addAvg[NONALIGNED] = PFX(addAvg_64x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x32].addAvg[NONALIGNED] = PFX(addAvg_64x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x48].addAvg[NONALIGNED] = PFX(addAvg_64x48_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x64].addAvg[NONALIGNED] = PFX(addAvg_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x2].addAvg[ALIGNED]   = PFX(addAvg_4x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x4].addAvg[ALIGNED]   = PFX(addAvg_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x8].addAvg[ALIGNED]   = PFX(addAvg_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x16].addAvg[ALIGNED]  = PFX(addAvg_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_6x8].addAvg[ALIGNED]   = PFX(addAvg_6x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x2].addAvg[ALIGNED]   = PFX(addAvg_8x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].addAvg[ALIGNED]   = PFX(addAvg_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x6].addAvg[ALIGNED]   = PFX(addAvg_8x6_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].addAvg[ALIGNED]   = PFX(addAvg_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].addAvg[ALIGNED]  = PFX(addAvg_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].addAvg[ALIGNED]  = PFX(addAvg_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_12x16].addAvg[ALIGNED] = PFX(addAvg_12x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].addAvg[ALIGNED]  = PFX(addAvg_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].addAvg[ALIGNED]  = PFX(addAvg_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].addAvg[ALIGNED] = PFX(addAvg_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].addAvg[ALIGNED] = PFX(addAvg_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].addAvg[ALIGNED] = PFX(addAvg_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].addAvg[ALIGNED] = PFX(addAvg_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].addAvg[ALIGNED]  = PFX(addAvg_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].addAvg[ALIGNED] = PFX(addAvg_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].addAvg[ALIGNED] = PFX(addAvg_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].addAvg[ALIGNED] = PFX(addAvg_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x2].addAvg[NONALIGNED]   = PFX(addAvg_4x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x4].addAvg[NONALIGNED]   = PFX(addAvg_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x8].addAvg[NONALIGNED]   = PFX(addAvg_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x16].addAvg[NONALIGNED]  = PFX(addAvg_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_6x8].addAvg[NONALIGNED]   = PFX(addAvg_6x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x2].addAvg[NONALIGNED]   = PFX(addAvg_8x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].addAvg[NONALIGNED]   = PFX(addAvg_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x6].addAvg[NONALIGNED]   = PFX(addAvg_8x6_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].addAvg[NONALIGNED]   = PFX(addAvg_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].addAvg[NONALIGNED]  = PFX(addAvg_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].addAvg[NONALIGNED]  = PFX(addAvg_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_12x16].addAvg[NONALIGNED] = PFX(addAvg_12x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].addAvg[NONALIGNED]  = PFX(addAvg_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].addAvg[NONALIGNED]  = PFX(addAvg_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].addAvg[NONALIGNED] = PFX(addAvg_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].addAvg[NONALIGNED] = PFX(addAvg_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].addAvg[NONALIGNED] = PFX(addAvg_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].addAvg[NONALIGNED] = PFX(addAvg_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].addAvg[NONALIGNED]  = PFX(addAvg_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].addAvg[NONALIGNED] = PFX(addAvg_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].addAvg[NONALIGNED] = PFX(addAvg_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].addAvg[NONALIGNED] = PFX(addAvg_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x8].addAvg[ALIGNED]   = PFX(addAvg_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x16].addAvg[ALIGNED]  = PFX(addAvg_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x32].addAvg[ALIGNED]  = PFX(addAvg_4x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_6x16].addAvg[ALIGNED]  = PFX(addAvg_6x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].addAvg[ALIGNED]   = PFX(addAvg_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].addAvg[ALIGNED]   = PFX(addAvg_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].addAvg[ALIGNED]  = PFX(addAvg_8x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].addAvg[ALIGNED]  = PFX(addAvg_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].addAvg[ALIGNED]  = PFX(addAvg_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].addAvg[ALIGNED]  = PFX(addAvg_8x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_12x32].addAvg[ALIGNED] = PFX(addAvg_12x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].addAvg[ALIGNED]  = PFX(addAvg_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].addAvg[ALIGNED] = PFX(addAvg_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].addAvg[ALIGNED] = PFX(addAvg_16x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].addAvg[ALIGNED] = PFX(addAvg_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].addAvg[ALIGNED] = PFX(addAvg_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].addAvg[ALIGNED] = PFX(addAvg_24x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].addAvg[ALIGNED] = PFX(addAvg_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].addAvg[ALIGNED] = PFX(addAvg_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].addAvg[ALIGNED] = PFX(addAvg_32x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].addAvg[ALIGNED] = PFX(addAvg_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x8].addAvg[NONALIGNED]   = PFX(addAvg_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x16].addAvg[NONALIGNED]  = PFX(addAvg_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x32].addAvg[NONALIGNED]  = PFX(addAvg_4x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_6x16].addAvg[NONALIGNED]  = PFX(addAvg_6x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].addAvg[NONALIGNED]   = PFX(addAvg_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].addAvg[NONALIGNED]   = PFX(addAvg_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].addAvg[NONALIGNED]  = PFX(addAvg_8x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].addAvg[NONALIGNED]  = PFX(addAvg_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].addAvg[NONALIGNED]  = PFX(addAvg_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].addAvg[NONALIGNED]  = PFX(addAvg_8x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_12x32].addAvg[NONALIGNED] = PFX(addAvg_12x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].addAvg[NONALIGNED]  = PFX(addAvg_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].addAvg[NONALIGNED] = PFX(addAvg_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].addAvg[NONALIGNED] = PFX(addAvg_16x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].addAvg[NONALIGNED] = PFX(addAvg_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].addAvg[NONALIGNED] = PFX(addAvg_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].addAvg[NONALIGNED] = PFX(addAvg_24x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].addAvg[NONALIGNED] = PFX(addAvg_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].addAvg[NONALIGNED] = PFX(addAvg_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].addAvg[NONALIGNED] = PFX(addAvg_32x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].addAvg[NONALIGNED] = PFX(addAvg_32x64_neon);
arm/asm-primitives.cpp:         p.quant = PFX(quant_neon);
arm/asm-primitives.cpp:         p.nquant = PFX(nquant_neon);
arm/asm-primitives.cpp:         p.dequant_scaling = PFX(dequant_scaling_neon);
arm/asm-primitives.cpp:         p.dequant_normal  = PFX(dequant_normal_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x4].satd   = PFX(pixel_satd_4x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x8].satd   = PFX(pixel_satd_4x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_4x16].satd  = PFX(pixel_satd_4x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x4].satd   = PFX(pixel_satd_8x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x8].satd   = PFX(pixel_satd_8x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x16].satd  = PFX(pixel_satd_8x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_8x32].satd  = PFX(pixel_satd_8x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_12x16].satd = PFX(pixel_satd_12x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x4].satd  = PFX(pixel_satd_16x4_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x8].satd  = PFX(pixel_satd_16x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x16].satd = PFX(pixel_satd_16x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x32].satd = PFX(pixel_satd_16x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_16x64].satd = PFX(pixel_satd_16x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_24x32].satd = PFX(pixel_satd_24x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x8].satd  = PFX(pixel_satd_32x8_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x16].satd = PFX(pixel_satd_32x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x24].satd = PFX(pixel_satd_32x24_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x32].satd = PFX(pixel_satd_32x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_32x64].satd = PFX(pixel_satd_32x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_48x64].satd = PFX(pixel_satd_48x64_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x16].satd = PFX(pixel_satd_64x16_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x32].satd = PFX(pixel_satd_64x32_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x48].satd = PFX(pixel_satd_64x48_neon);
arm/asm-primitives.cpp:         p.pu[LUMA_64x64].satd = PFX(pixel_satd_64x64_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_4x4].satd    = PFX(pixel_satd_4x4_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_4x8].satd    = PFX(pixel_satd_4x8_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_4x16].satd   = PFX(pixel_satd_4x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].satd    = PFX(pixel_satd_8x4_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].satd    = PFX(pixel_satd_8x8_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].satd   = PFX(pixel_satd_8x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].satd   = PFX(pixel_satd_8x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_12x16].satd  = PFX(pixel_satd_12x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].satd   = PFX(pixel_satd_16x4_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].satd   = PFX(pixel_satd_16x8_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].satd  = PFX(pixel_satd_16x12_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].satd  = PFX(pixel_satd_16x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].satd  = PFX(pixel_satd_16x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].satd  = PFX(pixel_satd_24x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].satd   = PFX(pixel_satd_32x8_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].satd  = PFX(pixel_satd_32x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].satd  = PFX(pixel_satd_32x24_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].satd  = PFX(pixel_satd_32x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_4x4].satd    = PFX(pixel_satd_4x4_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_4x8].satd    = PFX(pixel_satd_4x8_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_4x16].satd   = PFX(pixel_satd_4x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_4x32].satd   = PFX(pixel_satd_4x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].satd    = PFX(pixel_satd_8x4_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].satd    = PFX(pixel_satd_8x8_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].satd   = PFX(pixel_satd_8x12_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].satd   = PFX(pixel_satd_8x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].satd   = PFX(pixel_satd_8x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].satd   = PFX(pixel_satd_8x64_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_12x32].satd  = PFX(pixel_satd_12x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].satd   = PFX(pixel_satd_16x8_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].satd  = PFX(pixel_satd_16x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].satd  = PFX(pixel_satd_16x24_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].satd  = PFX(pixel_satd_16x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].satd  = PFX(pixel_satd_16x64_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].satd  = PFX(pixel_satd_24x64_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].satd  = PFX(pixel_satd_32x16_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].satd  = PFX(pixel_satd_32x32_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].satd  = PFX(pixel_satd_32x48_neon);
arm/asm-primitives.cpp:         p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].satd  = PFX(pixel_satd_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x2].filter_hpp   = PFX(interp_4tap_horiz_pp_4x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x4].filter_hpp   = PFX(interp_4tap_horiz_pp_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x8].filter_hpp   = PFX(interp_4tap_horiz_pp_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x16].filter_hpp  = PFX(interp_4tap_horiz_pp_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x2].filter_hpp   = PFX(interp_4tap_horiz_pp_8x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].filter_hpp   = PFX(interp_4tap_horiz_pp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x6].filter_hpp   = PFX(interp_4tap_horiz_pp_8x6_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].filter_hpp   = PFX(interp_4tap_horiz_pp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].filter_hpp  = PFX(interp_4tap_horiz_pp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].filter_hpp  = PFX(interp_4tap_horiz_pp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_12x16].filter_hpp = PFX(interp_4tap_horiz_pp_12x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].filter_hpp  = PFX(interp_4tap_horiz_pp_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].filter_hpp  = PFX(interp_4tap_horiz_pp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].filter_hpp = PFX(interp_4tap_horiz_pp_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].filter_hpp = PFX(interp_4tap_horiz_pp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].filter_hpp = PFX(interp_4tap_horiz_pp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].filter_hpp = PFX(interp_4tap_horiz_pp_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].filter_hpp  = PFX(interp_4tap_horiz_pp_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].filter_hpp = PFX(interp_4tap_horiz_pp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].filter_hpp = PFX(interp_4tap_horiz_pp_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].filter_hpp = PFX(interp_4tap_horiz_pp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x4].filter_hpp   = PFX(interp_4tap_horiz_pp_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x8].filter_hpp   = PFX(interp_4tap_horiz_pp_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x16].filter_hpp  = PFX(interp_4tap_horiz_pp_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x32].filter_hpp  = PFX(interp_4tap_horiz_pp_4x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].filter_hpp   = PFX(interp_4tap_horiz_pp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].filter_hpp   = PFX(interp_4tap_horiz_pp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].filter_hpp  = PFX(interp_4tap_horiz_pp_8x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].filter_hpp  = PFX(interp_4tap_horiz_pp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].filter_hpp  = PFX(interp_4tap_horiz_pp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].filter_hpp  = PFX(interp_4tap_horiz_pp_8x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_12x32].filter_hpp = PFX(interp_4tap_horiz_pp_12x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].filter_hpp  = PFX(interp_4tap_horiz_pp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].filter_hpp = PFX(interp_4tap_horiz_pp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].filter_hpp = PFX(interp_4tap_horiz_pp_16x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].filter_hpp = PFX(interp_4tap_horiz_pp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].filter_hpp = PFX(interp_4tap_horiz_pp_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].filter_hpp = PFX(interp_4tap_horiz_pp_24x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].filter_hpp = PFX(interp_4tap_horiz_pp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].filter_hpp = PFX(interp_4tap_horiz_pp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].filter_hpp = PFX(interp_4tap_horiz_pp_32x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].filter_hpp = PFX(interp_4tap_horiz_pp_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_4x4].filter_hpp   = PFX(interp_4tap_horiz_pp_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_4x8].filter_hpp   = PFX(interp_4tap_horiz_pp_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_4x16].filter_hpp  = PFX(interp_4tap_horiz_pp_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x4].filter_hpp   = PFX(interp_4tap_horiz_pp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x8].filter_hpp   = PFX(interp_4tap_horiz_pp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x16].filter_hpp  = PFX(interp_4tap_horiz_pp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x32].filter_hpp  = PFX(interp_4tap_horiz_pp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_12x16].filter_hpp = PFX(interp_4tap_horiz_pp_12x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x4].filter_hpp  = PFX(interp_4tap_horiz_pp_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x8].filter_hpp  = PFX(interp_4tap_horiz_pp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x12].filter_hpp = PFX(interp_4tap_horiz_pp_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x16].filter_hpp = PFX(interp_4tap_horiz_pp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x32].filter_hpp = PFX(interp_4tap_horiz_pp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x64].filter_hpp = PFX(interp_4tap_horiz_pp_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_24x32].filter_hpp = PFX(interp_4tap_horiz_pp_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x8].filter_hpp  = PFX(interp_4tap_horiz_pp_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x16].filter_hpp = PFX(interp_4tap_horiz_pp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x24].filter_hpp = PFX(interp_4tap_horiz_pp_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x32].filter_hpp = PFX(interp_4tap_horiz_pp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x64].filter_hpp = PFX(interp_4tap_horiz_pp_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_48x64].filter_hpp = PFX(interp_4tap_horiz_pp_48x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x16].filter_hpp = PFX(interp_4tap_horiz_pp_64x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x32].filter_hpp = PFX(interp_4tap_horiz_pp_64x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x48].filter_hpp = PFX(interp_4tap_horiz_pp_64x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x64].filter_hpp = PFX(interp_4tap_horiz_pp_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x2].filter_hps   = PFX(interp_4tap_horiz_ps_4x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x4].filter_hps   = PFX(interp_4tap_horiz_ps_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x8].filter_hps   = PFX(interp_4tap_horiz_ps_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x16].filter_hps  = PFX(interp_4tap_horiz_ps_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x2].filter_hps   = PFX(interp_4tap_horiz_ps_8x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].filter_hps   = PFX(interp_4tap_horiz_ps_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x6].filter_hps   = PFX(interp_4tap_horiz_ps_8x6_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].filter_hps   = PFX(interp_4tap_horiz_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].filter_hps  = PFX(interp_4tap_horiz_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].filter_hps  = PFX(interp_4tap_horiz_ps_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_12x16].filter_hps = PFX(interp_4tap_horiz_ps_12x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].filter_hps  = PFX(interp_4tap_horiz_ps_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].filter_hps  = PFX(interp_4tap_horiz_ps_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].filter_hps = PFX(interp_4tap_horiz_ps_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].filter_hps = PFX(interp_4tap_horiz_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].filter_hps = PFX(interp_4tap_horiz_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].filter_hps = PFX(interp_4tap_horiz_ps_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].filter_hps  = PFX(interp_4tap_horiz_ps_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].filter_hps = PFX(interp_4tap_horiz_ps_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].filter_hps = PFX(interp_4tap_horiz_ps_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].filter_hps = PFX(interp_4tap_horiz_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x4].filter_hps   = PFX(interp_4tap_horiz_ps_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x8].filter_hps   = PFX(interp_4tap_horiz_ps_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x16].filter_hps  = PFX(interp_4tap_horiz_ps_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x32].filter_hps  = PFX(interp_4tap_horiz_ps_4x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].filter_hps   = PFX(interp_4tap_horiz_ps_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].filter_hps   = PFX(interp_4tap_horiz_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].filter_hps  = PFX(interp_4tap_horiz_ps_8x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].filter_hps  = PFX(interp_4tap_horiz_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].filter_hps  = PFX(interp_4tap_horiz_ps_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].filter_hps  = PFX(interp_4tap_horiz_ps_8x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_12x32].filter_hps = PFX(interp_4tap_horiz_ps_12x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].filter_hps  = PFX(interp_4tap_horiz_ps_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].filter_hps = PFX(interp_4tap_horiz_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].filter_hps = PFX(interp_4tap_horiz_ps_16x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].filter_hps = PFX(interp_4tap_horiz_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].filter_hps = PFX(interp_4tap_horiz_ps_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].filter_hps = PFX(interp_4tap_horiz_ps_24x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].filter_hps = PFX(interp_4tap_horiz_ps_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].filter_hps = PFX(interp_4tap_horiz_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].filter_hps = PFX(interp_4tap_horiz_ps_32x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].filter_hps = PFX(interp_4tap_horiz_ps_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_4x4].filter_hps   = PFX(interp_4tap_horiz_ps_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_4x8].filter_hps   = PFX(interp_4tap_horiz_ps_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_4x16].filter_hps  = PFX(interp_4tap_horiz_ps_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x4].filter_hps   = PFX(interp_4tap_horiz_ps_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x8].filter_hps   = PFX(interp_4tap_horiz_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x16].filter_hps  = PFX(interp_4tap_horiz_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x32].filter_hps  = PFX(interp_4tap_horiz_ps_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_12x16].filter_hps = PFX(interp_4tap_horiz_ps_12x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x4].filter_hps  = PFX(interp_4tap_horiz_ps_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x8].filter_hps  = PFX(interp_4tap_horiz_ps_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x12].filter_hps = PFX(interp_4tap_horiz_ps_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x16].filter_hps = PFX(interp_4tap_horiz_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x32].filter_hps = PFX(interp_4tap_horiz_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x64].filter_hps = PFX(interp_4tap_horiz_ps_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_24x32].filter_hps = PFX(interp_4tap_horiz_ps_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x8].filter_hps  = PFX(interp_4tap_horiz_ps_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x16].filter_hps = PFX(interp_4tap_horiz_ps_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x24].filter_hps = PFX(interp_4tap_horiz_ps_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x32].filter_hps = PFX(interp_4tap_horiz_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x64].filter_hps = PFX(interp_4tap_horiz_ps_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_48x64].filter_hps = PFX(interp_4tap_horiz_ps_48x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x16].filter_hps = PFX(interp_4tap_horiz_ps_64x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x32].filter_hps = PFX(interp_4tap_horiz_ps_64x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x48].filter_hps = PFX(interp_4tap_horiz_ps_64x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x64].filter_hps = PFX(interp_4tap_horiz_ps_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].luma_hpp   = PFX(interp_horiz_pp_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].luma_hpp   = PFX(interp_horiz_pp_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].luma_hpp  = PFX(interp_horiz_pp_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].luma_hpp   = PFX(interp_horiz_pp_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].luma_hpp   = PFX(interp_horiz_pp_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].luma_hpp  = PFX(interp_horiz_pp_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].luma_hpp  = PFX(interp_horiz_pp_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].luma_hpp = PFX(interp_horiz_pp_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].luma_hpp  = PFX(interp_horiz_pp_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].luma_hpp  = PFX(interp_horiz_pp_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].luma_hpp = PFX(interp_horiz_pp_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].luma_hpp = PFX(interp_horiz_pp_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].luma_hpp = PFX(interp_horiz_pp_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].luma_hpp = PFX(interp_horiz_pp_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].luma_hpp = PFX(interp_horiz_pp_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].luma_hpp  = PFX(interp_horiz_pp_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].luma_hpp = PFX(interp_horiz_pp_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].luma_hpp = PFX(interp_horiz_pp_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].luma_hpp = PFX(interp_horiz_pp_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].luma_hpp = PFX(interp_horiz_pp_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].luma_hpp = PFX(interp_horiz_pp_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].luma_hpp = PFX(interp_horiz_pp_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].luma_hpp = PFX(interp_horiz_pp_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].luma_hpp = PFX(interp_horiz_pp_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].luma_hpp = PFX(interp_horiz_pp_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].luma_hps   = PFX(interp_horiz_ps_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].luma_hps   = PFX(interp_horiz_ps_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].luma_hps  = PFX(interp_horiz_ps_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].luma_hps   = PFX(interp_horiz_ps_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].luma_hps   = PFX(interp_horiz_ps_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].luma_hps  = PFX(interp_horiz_ps_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].luma_hps  = PFX(interp_horiz_ps_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].luma_hps = PFX(interp_horiz_ps_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].luma_hps  = PFX(interp_horiz_ps_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].luma_hps  = PFX(interp_horiz_ps_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].luma_hps = PFX(interp_horiz_ps_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].luma_hps = PFX(interp_horiz_ps_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].luma_hps = PFX(interp_horiz_ps_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].luma_hps = PFX(interp_horiz_ps_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].luma_hps = PFX(interp_horiz_ps_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].luma_hps  = PFX(interp_horiz_ps_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].luma_hps = PFX(interp_horiz_ps_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].luma_hps = PFX(interp_horiz_ps_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].luma_hps = PFX(interp_horiz_ps_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].luma_hps = PFX(interp_horiz_ps_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].luma_hps = PFX(interp_horiz_ps_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].luma_hps = PFX(interp_horiz_ps_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].luma_hps = PFX(interp_horiz_ps_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].luma_hps = PFX(interp_horiz_ps_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].luma_hps = PFX(interp_horiz_ps_64x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].count_nonzero     = PFX(count_nonzero_4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].count_nonzero     = PFX(count_nonzero_8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].count_nonzero   = PFX(count_nonzero_16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].count_nonzero   = PFX(count_nonzero_32_neon);
arm/asm-primitives.cpp:        p.scale2D_64to32  = PFX(scale2D_64to32_neon);
arm/asm-primitives.cpp:        p.scale1D_128to64[ALIGNED] = PFX(scale1D_128to64_neon);
arm/asm-primitives.cpp:        p.scale1D_128to64[NONALIGNED] = PFX(scale1D_128to64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].copy_cnt     = PFX(copy_cnt_4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].copy_cnt     = PFX(copy_cnt_8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].copy_cnt   = PFX(copy_cnt_16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].copy_cnt   = PFX(copy_cnt_32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].convert_p2s[ALIGNED]   = PFX(filterPixelToShort_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].convert_p2s[ALIGNED]   = PFX(filterPixelToShort_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].convert_p2s[ALIGNED]  = PFX(filterPixelToShort_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].convert_p2s[ALIGNED]   = PFX(filterPixelToShort_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].convert_p2s[ALIGNED]   = PFX(filterPixelToShort_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].convert_p2s[ALIGNED]  = PFX(filterPixelToShort_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].convert_p2s[ALIGNED]  = PFX(filterPixelToShort_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].convert_p2s[ALIGNED] = PFX(filterPixelToShort_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].convert_p2s[ALIGNED]  = PFX(filterPixelToShort_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].convert_p2s[ALIGNED]  = PFX(filterPixelToShort_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].convert_p2s[ALIGNED] = PFX(filterPixelToShort_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].convert_p2s[ALIGNED] = PFX(filterPixelToShort_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].convert_p2s[ALIGNED] = PFX(filterPixelToShort_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].convert_p2s[ALIGNED] = PFX(filterPixelToShort_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].convert_p2s[ALIGNED] = PFX(filterPixelToShort_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].convert_p2s[ALIGNED]  = PFX(filterPixelToShort_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].convert_p2s[ALIGNED] = PFX(filterPixelToShort_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].convert_p2s[ALIGNED] = PFX(filterPixelToShort_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].convert_p2s[ALIGNED] = PFX(filterPixelToShort_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].convert_p2s[ALIGNED] = PFX(filterPixelToShort_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].convert_p2s[ALIGNED] = PFX(filterPixelToShort_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].convert_p2s[ALIGNED] = PFX(filterPixelToShort_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].convert_p2s[ALIGNED] = PFX(filterPixelToShort_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].convert_p2s[ALIGNED] = PFX(filterPixelToShort_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].convert_p2s[ALIGNED] = PFX(filterPixelToShort_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].convert_p2s[NONALIGNED]   = PFX(filterPixelToShort_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].convert_p2s[NONALIGNED]   = PFX(filterPixelToShort_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].convert_p2s[NONALIGNED]  = PFX(filterPixelToShort_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].convert_p2s[NONALIGNED]   = PFX(filterPixelToShort_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].convert_p2s[NONALIGNED]   = PFX(filterPixelToShort_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].convert_p2s[NONALIGNED]  = PFX(filterPixelToShort_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].convert_p2s[NONALIGNED]  = PFX(filterPixelToShort_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].convert_p2s[NONALIGNED]  = PFX(filterPixelToShort_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].convert_p2s[NONALIGNED]  = PFX(filterPixelToShort_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].convert_p2s[NONALIGNED]  = PFX(filterPixelToShort_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].convert_p2s[NONALIGNED] = PFX(filterPixelToShort_64x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].blockfill_s[ALIGNED]   = PFX(blockfill_s_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].blockfill_s[ALIGNED]   = PFX(blockfill_s_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].blockfill_s[ALIGNED] = PFX(blockfill_s_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].blockfill_s[ALIGNED] = PFX(blockfill_s_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].blockfill_s[NONALIGNED]   = PFX(blockfill_s_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].blockfill_s[NONALIGNED]   = PFX(blockfill_s_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].blockfill_s[NONALIGNED] = PFX(blockfill_s_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].blockfill_s[NONALIGNED] = PFX(blockfill_s_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].copy_ss   = PFX(blockcopy_ss_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].copy_ss   = PFX(blockcopy_ss_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].copy_ss = PFX(blockcopy_ss_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].copy_ss = PFX(blockcopy_ss_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].copy_ss = PFX(blockcopy_ss_64x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].copy_ps   = PFX(blockcopy_ps_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].copy_ps   = PFX(blockcopy_ps_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].copy_ps = PFX(blockcopy_ps_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].copy_ps = PFX(blockcopy_ps_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].copy_ps = PFX(blockcopy_ps_64x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].copy_sp   = PFX(blockcopy_sp_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].copy_sp   = PFX(blockcopy_sp_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].copy_sp = PFX(blockcopy_sp_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].copy_sp = PFX(blockcopy_sp_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].copy_sp = PFX(blockcopy_sp_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_4x4].copy_ss   = PFX(blockcopy_ss_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_8x8].copy_ss   = PFX(blockcopy_ss_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_16x16].copy_ss = PFX(blockcopy_ss_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_32x32].copy_ss = PFX(blockcopy_ss_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_4x8].copy_ss   = PFX(blockcopy_ss_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_8x16].copy_ss  = PFX(blockcopy_ss_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_16x32].copy_ss = PFX(blockcopy_ss_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_32x64].copy_ss = PFX(blockcopy_ss_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_4x4].copy_ps   = PFX(blockcopy_ps_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_8x8].copy_ps   = PFX(blockcopy_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_16x16].copy_ps = PFX(blockcopy_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_32x32].copy_ps = PFX(blockcopy_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_4x8].copy_ps   = PFX(blockcopy_ps_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_8x16].copy_ps  = PFX(blockcopy_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_16x32].copy_ps = PFX(blockcopy_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_32x64].copy_ps = PFX(blockcopy_ps_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_4x4].copy_sp   = PFX(blockcopy_sp_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_8x8].copy_sp   = PFX(blockcopy_sp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_16x16].copy_sp = PFX(blockcopy_sp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_32x32].copy_sp = PFX(blockcopy_sp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_4x8].copy_sp   = PFX(blockcopy_sp_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_8x16].copy_sp  = PFX(blockcopy_sp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_16x32].copy_sp = PFX(blockcopy_sp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_32x64].copy_sp = PFX(blockcopy_sp_32x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].add_ps[ALIGNED]   = PFX(pixel_add_ps_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].add_ps[ALIGNED]   = PFX(pixel_add_ps_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].add_ps[ALIGNED] = PFX(pixel_add_ps_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].add_ps[ALIGNED] = PFX(pixel_add_ps_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].add_ps[ALIGNED] = PFX(pixel_add_ps_64x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].add_ps[NONALIGNED]   = PFX(pixel_add_ps_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].add_ps[NONALIGNED]   = PFX(pixel_add_ps_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].add_ps[NONALIGNED] = PFX(pixel_add_ps_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].add_ps[NONALIGNED] = PFX(pixel_add_ps_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].add_ps[NONALIGNED] = PFX(pixel_add_ps_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_4x4].add_ps[ALIGNED]   = PFX(pixel_add_ps_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_8x8].add_ps[ALIGNED]   = PFX(pixel_add_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_16x16].add_ps[ALIGNED] = PFX(pixel_add_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_32x32].add_ps[ALIGNED] = PFX(pixel_add_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_4x8].add_ps[ALIGNED]   = PFX(pixel_add_ps_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_8x16].add_ps[ALIGNED]  = PFX(pixel_add_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_16x32].add_ps[ALIGNED] = PFX(pixel_add_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_32x64].add_ps[ALIGNED] = PFX(pixel_add_ps_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_4x4].add_ps[NONALIGNED]   = PFX(pixel_add_ps_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_8x8].add_ps[NONALIGNED]   = PFX(pixel_add_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_16x16].add_ps[NONALIGNED] = PFX(pixel_add_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_32x32].add_ps[NONALIGNED] = PFX(pixel_add_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_4x8].add_ps[NONALIGNED]   = PFX(pixel_add_ps_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_8x16].add_ps[NONALIGNED]  = PFX(pixel_add_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_16x32].add_ps[NONALIGNED] = PFX(pixel_add_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_32x64].add_ps[NONALIGNED] = PFX(pixel_add_ps_32x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].cpy2Dto1D_shr   = PFX(cpy2Dto1D_shr_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].cpy2Dto1D_shr   = PFX(cpy2Dto1D_shr_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].cpy2Dto1D_shr = PFX(cpy2Dto1D_shr_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].cpy2Dto1D_shr = PFX(cpy2Dto1D_shr_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].ssd_s[ALIGNED]   = PFX(pixel_ssd_s_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].ssd_s[ALIGNED]   = PFX(pixel_ssd_s_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].ssd_s[ALIGNED] = PFX(pixel_ssd_s_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].ssd_s[ALIGNED] = PFX(pixel_ssd_s_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].ssd_s[NONALIGNED]   = PFX(pixel_ssd_s_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].ssd_s[NONALIGNED]   = PFX(pixel_ssd_s_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].ssd_s[NONALIGNED] = PFX(pixel_ssd_s_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].ssd_s[NONALIGNED] = PFX(pixel_ssd_s_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].sse_ss   = PFX(pixel_sse_ss_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].sse_ss   = PFX(pixel_sse_ss_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].sse_ss = PFX(pixel_sse_ss_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].sse_ss = PFX(pixel_sse_ss_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].sse_ss = PFX(pixel_sse_ss_64x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].sub_ps   = PFX(pixel_sub_ps_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].sub_ps   = PFX(pixel_sub_ps_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].sub_ps = PFX(pixel_sub_ps_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].sub_ps = PFX(pixel_sub_ps_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].sub_ps = PFX(pixel_sub_ps_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_4x4].sub_ps   = PFX(pixel_sub_ps_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_8x8].sub_ps   = PFX(pixel_sub_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_16x16].sub_ps = PFX(pixel_sub_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].cu[BLOCK_420_32x32].sub_ps = PFX(pixel_sub_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_4x8].sub_ps   = PFX(pixel_sub_ps_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_8x16].sub_ps  = PFX(pixel_sub_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_16x32].sub_ps = PFX(pixel_sub_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_32x64].sub_ps = PFX(pixel_sub_ps_32x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].calcresidual[ALIGNED]   = PFX(getResidual4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].calcresidual[ALIGNED]   = PFX(getResidual8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].calcresidual[ALIGNED] = PFX(getResidual16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].calcresidual[ALIGNED] = PFX(getResidual32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].calcresidual[NONALIGNED]   = PFX(getResidual4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].calcresidual[NONALIGNED]   = PFX(getResidual8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].calcresidual[NONALIGNED] = PFX(getResidual16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].calcresidual[NONALIGNED] = PFX(getResidual32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].sse_pp   = PFX(pixel_sse_pp_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].sse_pp   = PFX(pixel_sse_pp_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].sse_pp = PFX(pixel_sse_pp_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].sse_pp = PFX(pixel_sse_pp_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].sse_pp = PFX(pixel_sse_pp_64x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].var   = PFX(pixel_var_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].var = PFX(pixel_var_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].var = PFX(pixel_var_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].var = PFX(pixel_var_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].copy_pp = PFX(blockcopy_pp_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].copy_pp   = PFX(blockcopy_pp_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].copy_pp   = PFX(blockcopy_pp_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].copy_pp  = PFX(blockcopy_pp_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].copy_pp  = PFX(blockcopy_pp_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].copy_pp = PFX(blockcopy_pp_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].copy_pp   = PFX(blockcopy_pp_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].copy_pp   = PFX(blockcopy_pp_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].copy_pp  = PFX(blockcopy_pp_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].copy_pp  = PFX(blockcopy_pp_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].copy_pp  = PFX(blockcopy_pp_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].copy_pp = PFX(blockcopy_pp_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].copy_pp = PFX(blockcopy_pp_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].copy_pp = PFX(blockcopy_pp_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].copy_pp = PFX(blockcopy_pp_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].copy_pp  = PFX(blockcopy_pp_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].copy_pp = PFX(blockcopy_pp_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].copy_pp = PFX(blockcopy_pp_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].copy_pp = PFX(blockcopy_pp_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].copy_pp = PFX(blockcopy_pp_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].copy_pp = PFX(blockcopy_pp_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].copy_pp = PFX(blockcopy_pp_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].copy_pp = PFX(blockcopy_pp_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].copy_pp = PFX(blockcopy_pp_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].copy_pp = PFX(blockcopy_pp_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_2x4].copy_pp   = PFX(blockcopy_pp_2x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_2x8].copy_pp   = PFX(blockcopy_pp_2x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x2].copy_pp   = PFX(blockcopy_pp_4x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x4].copy_pp   = PFX(blockcopy_pp_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x8].copy_pp   = PFX(blockcopy_pp_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_4x16].copy_pp  = PFX(blockcopy_pp_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_6x8].copy_pp   = PFX(blockcopy_pp_6x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x2].copy_pp   = PFX(blockcopy_pp_8x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].copy_pp   = PFX(blockcopy_pp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x6].copy_pp   = PFX(blockcopy_pp_8x6_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].copy_pp   = PFX(blockcopy_pp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].copy_pp  = PFX(blockcopy_pp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].copy_pp  = PFX(blockcopy_pp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_12x16].copy_pp = PFX(blockcopy_pp_12x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].copy_pp  = PFX(blockcopy_pp_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].copy_pp  = PFX(blockcopy_pp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].copy_pp = PFX(blockcopy_pp_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].copy_pp = PFX(blockcopy_pp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].copy_pp = PFX(blockcopy_pp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].copy_pp = PFX(blockcopy_pp_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].copy_pp  = PFX(blockcopy_pp_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].copy_pp = PFX(blockcopy_pp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].copy_pp = PFX(blockcopy_pp_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].copy_pp = PFX(blockcopy_pp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_2x16].copy_pp  = PFX(blockcopy_pp_2x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x4].copy_pp   = PFX(blockcopy_pp_4x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x8].copy_pp   = PFX(blockcopy_pp_4x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x16].copy_pp  = PFX(blockcopy_pp_4x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_4x32].copy_pp  = PFX(blockcopy_pp_4x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_6x16].copy_pp  = PFX(blockcopy_pp_6x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].copy_pp   = PFX(blockcopy_pp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].copy_pp   = PFX(blockcopy_pp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].copy_pp  = PFX(blockcopy_pp_8x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].copy_pp  = PFX(blockcopy_pp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].copy_pp  = PFX(blockcopy_pp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].copy_pp  = PFX(blockcopy_pp_8x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_12x32].copy_pp = PFX(blockcopy_pp_12x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].copy_pp  = PFX(blockcopy_pp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].copy_pp = PFX(blockcopy_pp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].copy_pp = PFX(blockcopy_pp_16x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].copy_pp = PFX(blockcopy_pp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].copy_pp = PFX(blockcopy_pp_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].copy_pp = PFX(blockcopy_pp_24x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].copy_pp = PFX(blockcopy_pp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].copy_pp = PFX(blockcopy_pp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].copy_pp = PFX(blockcopy_pp_32x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].copy_pp = PFX(blockcopy_pp_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].sad    = PFX(pixel_sad_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].sad    = PFX(pixel_sad_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].sad   = PFX(pixel_sad_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].sad   = PFX(pixel_sad_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].sad   = PFX(pixel_sad_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].sad   = PFX(pixel_sad_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].sad  = PFX(pixel_sad_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].sad  = PFX(pixel_sad_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].sad  = PFX(pixel_sad_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].sad  = PFX(pixel_sad_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].sad   = PFX(pixel_sad_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].sad  = PFX(pixel_sad_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].sad  = PFX(pixel_sad_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].sad  = PFX(pixel_sad_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].sad  = PFX(pixel_sad_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].sad  = PFX(pixel_sad_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].sad  = PFX(pixel_sad_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].sad  = PFX(pixel_sad_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].sad  = PFX(pixel_sad_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].sad  = PFX(pixel_sad_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].sad  = PFX(pixel_sad_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].sad  = PFX(pixel_sad_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].sad_x3   = PFX(sad_x3_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].sad_x3   = PFX(sad_x3_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].sad_x3  = PFX(sad_x3_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].sad_x3   = PFX(sad_x3_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].sad_x3   = PFX(sad_x3_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].sad_x3  = PFX(sad_x3_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].sad_x3  = PFX(sad_x3_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].sad_x3 = PFX(sad_x3_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].sad_x3  = PFX(sad_x3_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].sad_x3  = PFX(sad_x3_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].sad_x3 = PFX(sad_x3_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].sad_x3 = PFX(sad_x3_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].sad_x3 = PFX(sad_x3_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].sad_x3 = PFX(sad_x3_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].sad_x3 = PFX(sad_x3_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].sad_x3  = PFX(sad_x3_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].sad_x3 = PFX(sad_x3_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].sad_x3 = PFX(sad_x3_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].sad_x3 = PFX(sad_x3_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].sad_x3 = PFX(sad_x3_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].sad_x3 = PFX(sad_x3_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].sad_x3 = PFX(sad_x3_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].sad_x3 = PFX(sad_x3_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].sad_x3 = PFX(sad_x3_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].sad_x3 = PFX(sad_x3_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].sad_x4   = PFX(sad_x4_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].sad_x4   = PFX(sad_x4_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].sad_x4  = PFX(sad_x4_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].sad_x4   = PFX(sad_x4_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].sad_x4   = PFX(sad_x4_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].sad_x4  = PFX(sad_x4_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].sad_x4  = PFX(sad_x4_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].sad_x4 = PFX(sad_x4_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].sad_x4  = PFX(sad_x4_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].sad_x4  = PFX(sad_x4_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].sad_x4 = PFX(sad_x4_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].sad_x4 = PFX(sad_x4_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].sad_x4 = PFX(sad_x4_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].sad_x4 = PFX(sad_x4_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].sad_x4 = PFX(sad_x4_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].sad_x4  = PFX(sad_x4_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].sad_x4 = PFX(sad_x4_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].sad_x4 = PFX(sad_x4_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].sad_x4 = PFX(sad_x4_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].sad_x4 = PFX(sad_x4_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].sad_x4 = PFX(sad_x4_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].sad_x4 = PFX(sad_x4_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].sad_x4 = PFX(sad_x4_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].sad_x4 = PFX(sad_x4_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].sad_x4 = PFX(sad_x4_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].pixelavg_pp[ALIGNED]   = PFX(pixel_avg_pp_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].pixelavg_pp[ALIGNED]   = PFX(pixel_avg_pp_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].pixelavg_pp[ALIGNED]  = PFX(pixel_avg_pp_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].pixelavg_pp[ALIGNED]   = PFX(pixel_avg_pp_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].pixelavg_pp[ALIGNED]   = PFX(pixel_avg_pp_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].pixelavg_pp[ALIGNED]  = PFX(pixel_avg_pp_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].pixelavg_pp[ALIGNED]  = PFX(pixel_avg_pp_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].pixelavg_pp[ALIGNED]  = PFX(pixel_avg_pp_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].pixelavg_pp[ALIGNED]  = PFX(pixel_avg_pp_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].pixelavg_pp[ALIGNED]  = PFX(pixel_avg_pp_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].pixelavg_pp[ALIGNED] = PFX(pixel_avg_pp_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].pixelavg_pp[NONALIGNED]   = PFX(pixel_avg_pp_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].pixelavg_pp[NONALIGNED]   = PFX(pixel_avg_pp_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].pixelavg_pp[NONALIGNED]  = PFX(pixel_avg_pp_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].pixelavg_pp[NONALIGNED]   = PFX(pixel_avg_pp_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].pixelavg_pp[NONALIGNED]   = PFX(pixel_avg_pp_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].pixelavg_pp[NONALIGNED]  = PFX(pixel_avg_pp_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].pixelavg_pp[NONALIGNED]  = PFX(pixel_avg_pp_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].pixelavg_pp[NONALIGNED]  = PFX(pixel_avg_pp_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].pixelavg_pp[NONALIGNED]  = PFX(pixel_avg_pp_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].pixelavg_pp[NONALIGNED]  = PFX(pixel_avg_pp_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].pixelavg_pp[NONALIGNED] = PFX(pixel_avg_pp_64x64_neon);
arm/asm-primitives.cpp:        p.planecopy_cp = PFX(pixel_planecopy_cp_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].sa8d   = PFX(pixel_satd_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].sa8d = PFX(pixel_sa8d_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].sa8d = PFX(pixel_sa8d_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_32x32].sa8d = PFX(pixel_sa8d_32x32_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_64x64].sa8d = PFX(pixel_sa8d_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_8x16].sa8d = PFX(pixel_sa8d_8x16_neon); 
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_16x32].sa8d = PFX(pixel_sa8d_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].cu[BLOCK_422_32x64].sa8d = PFX(pixel_sa8d_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].luma_vpp     = PFX(interp_8tap_vert_pp_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].luma_vpp     = PFX(interp_8tap_vert_pp_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].luma_vpp    = PFX(interp_8tap_vert_pp_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].luma_vpp     = PFX(interp_8tap_vert_pp_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].luma_vpp     = PFX(interp_8tap_vert_pp_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].luma_vpp    = PFX(interp_8tap_vert_pp_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].luma_vpp    = PFX(interp_8tap_vert_pp_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].luma_vpp    = PFX(interp_8tap_vert_pp_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].luma_vpp    = PFX(interp_8tap_vert_pp_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].luma_vpp   = PFX(interp_8tap_vert_pp_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].luma_vpp   = PFX(interp_8tap_vert_pp_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].luma_vpp   = PFX(interp_8tap_vert_pp_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].luma_vpp   = PFX(interp_8tap_vert_pp_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].luma_vpp    = PFX(interp_8tap_vert_pp_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].luma_vpp   = PFX(interp_8tap_vert_pp_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].luma_vpp   = PFX(interp_8tap_vert_pp_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].luma_vpp   = PFX(interp_8tap_vert_pp_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].luma_vpp   = PFX(interp_8tap_vert_pp_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].luma_vpp   = PFX(interp_8tap_vert_pp_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].luma_vpp   = PFX(interp_8tap_vert_pp_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].luma_vpp   = PFX(interp_8tap_vert_pp_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].luma_vpp   = PFX(interp_8tap_vert_pp_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].luma_vpp   = PFX(interp_8tap_vert_pp_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].luma_vpp   = PFX(interp_8tap_vert_pp_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].luma_vpp   = PFX(interp_8tap_vert_pp_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].luma_vsp     = PFX(interp_8tap_vert_sp_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].luma_vsp     = PFX(interp_8tap_vert_sp_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].luma_vsp    = PFX(interp_8tap_vert_sp_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].luma_vsp     = PFX(interp_8tap_vert_sp_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].luma_vsp     = PFX(interp_8tap_vert_sp_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].luma_vsp    = PFX(interp_8tap_vert_sp_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].luma_vsp    = PFX(interp_8tap_vert_sp_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].luma_vsp    = PFX(interp_8tap_vert_sp_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].luma_vsp    = PFX(interp_8tap_vert_sp_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].luma_vsp   = PFX(interp_8tap_vert_sp_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].luma_vsp   = PFX(interp_8tap_vert_sp_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].luma_vsp   = PFX(interp_8tap_vert_sp_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].luma_vsp   = PFX(interp_8tap_vert_sp_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].luma_vsp    = PFX(interp_8tap_vert_sp_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].luma_vsp   = PFX(interp_8tap_vert_sp_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].luma_vsp   = PFX(interp_8tap_vert_sp_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].luma_vsp   = PFX(interp_8tap_vert_sp_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].luma_vsp   = PFX(interp_8tap_vert_sp_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].luma_vsp   = PFX(interp_8tap_vert_sp_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].luma_vsp   = PFX(interp_8tap_vert_sp_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].luma_vsp   = PFX(interp_8tap_vert_sp_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].luma_vsp   = PFX(interp_8tap_vert_sp_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].luma_vsp   = PFX(interp_8tap_vert_sp_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].luma_vsp   = PFX(interp_8tap_vert_sp_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].luma_vsp   = PFX(interp_8tap_vert_sp_12x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x4].luma_vps     = PFX(interp_8tap_vert_ps_4x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x8].luma_vps     = PFX(interp_8tap_vert_ps_4x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_4x16].luma_vps    = PFX(interp_8tap_vert_ps_4x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x4].luma_vps     = PFX(interp_8tap_vert_ps_8x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x8].luma_vps     = PFX(interp_8tap_vert_ps_8x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x16].luma_vps    = PFX(interp_8tap_vert_ps_8x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_8x32].luma_vps    = PFX(interp_8tap_vert_ps_8x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x4].luma_vps    = PFX(interp_8tap_vert_ps_16x4_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x8].luma_vps    = PFX(interp_8tap_vert_ps_16x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x16].luma_vps   = PFX(interp_8tap_vert_ps_16x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x32].luma_vps   = PFX(interp_8tap_vert_ps_16x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x64].luma_vps   = PFX(interp_8tap_vert_ps_16x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_16x12].luma_vps   = PFX(interp_8tap_vert_ps_16x12_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x8].luma_vps    = PFX(interp_8tap_vert_ps_32x8_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x16].luma_vps   = PFX(interp_8tap_vert_ps_32x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x32].luma_vps   = PFX(interp_8tap_vert_ps_32x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x64].luma_vps   = PFX(interp_8tap_vert_ps_32x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_32x24].luma_vps   = PFX(interp_8tap_vert_ps_32x24_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x16].luma_vps   = PFX(interp_8tap_vert_ps_64x16_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x32].luma_vps   = PFX(interp_8tap_vert_ps_64x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x64].luma_vps   = PFX(interp_8tap_vert_ps_64x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_64x48].luma_vps   = PFX(interp_8tap_vert_ps_64x48_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_24x32].luma_vps   = PFX(interp_8tap_vert_ps_24x32_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_48x64].luma_vps   = PFX(interp_8tap_vert_ps_48x64_neon);
arm/asm-primitives.cpp:        p.pu[LUMA_12x16].luma_vps   = PFX(interp_8tap_vert_ps_12x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x2].filter_vpp = PFX(interp_4tap_vert_pp_8x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].filter_vpp = PFX(interp_4tap_vert_pp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x6].filter_vpp = PFX(interp_4tap_vert_pp_8x6_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].filter_vpp = PFX(interp_4tap_vert_pp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].filter_vpp = PFX(interp_4tap_vert_pp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].filter_vpp = PFX(interp_4tap_vert_pp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].filter_vpp = PFX(interp_4tap_vert_pp_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].filter_vpp = PFX(interp_4tap_vert_pp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].filter_vpp = PFX(interp_4tap_vert_pp_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].filter_vpp = PFX(interp_4tap_vert_pp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].filter_vpp = PFX(interp_4tap_vert_pp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].filter_vpp = PFX(interp_4tap_vert_pp_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].filter_vpp = PFX(interp_4tap_vert_pp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].filter_vpp = PFX(interp_4tap_vert_pp_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].filter_vpp = PFX(interp_4tap_vert_pp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].filter_vpp = PFX(interp_4tap_vert_pp_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].filter_vpp = PFX(interp_4tap_vert_pp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].filter_vpp = PFX(interp_4tap_vert_pp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].filter_vpp = PFX(interp_4tap_vert_pp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].filter_vpp = PFX(interp_4tap_vert_pp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].filter_vpp = PFX(interp_4tap_vert_pp_8x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].filter_vpp = PFX(interp_4tap_vert_pp_8x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].filter_vpp = PFX(interp_4tap_vert_pp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].filter_vpp = PFX(interp_4tap_vert_pp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].filter_vpp = PFX(interp_4tap_vert_pp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].filter_vpp = PFX(interp_4tap_vert_pp_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].filter_vpp = PFX(interp_4tap_vert_pp_16x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].filter_vpp = PFX(interp_4tap_vert_pp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].filter_vpp = PFX(interp_4tap_vert_pp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].filter_vpp = PFX(interp_4tap_vert_pp_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].filter_vpp = PFX(interp_4tap_vert_pp_32x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].filter_vpp = PFX(interp_4tap_vert_pp_24x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x4].filter_vpp = PFX(interp_4tap_vert_pp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x8].filter_vpp = PFX(interp_4tap_vert_pp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x16].filter_vpp = PFX(interp_4tap_vert_pp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x32].filter_vpp = PFX(interp_4tap_vert_pp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x4].filter_vpp = PFX(interp_4tap_vert_pp_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x8].filter_vpp = PFX(interp_4tap_vert_pp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x12].filter_vpp = PFX(interp_4tap_vert_pp_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x16].filter_vpp = PFX(interp_4tap_vert_pp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x32].filter_vpp = PFX(interp_4tap_vert_pp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x64].filter_vpp = PFX(interp_4tap_vert_pp_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x8].filter_vpp = PFX(interp_4tap_vert_pp_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x16].filter_vpp = PFX(interp_4tap_vert_pp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x32].filter_vpp = PFX(interp_4tap_vert_pp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x64].filter_vpp = PFX(interp_4tap_vert_pp_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x16].filter_vpp = PFX(interp_4tap_vert_pp_64x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x32].filter_vpp = PFX(interp_4tap_vert_pp_64x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x48].filter_vpp = PFX(interp_4tap_vert_pp_64x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x64].filter_vpp = PFX(interp_4tap_vert_pp_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_24x32].filter_vpp = PFX(interp_4tap_vert_pp_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_48x64].filter_vpp = PFX(interp_4tap_vert_pp_48x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x2].filter_vps = PFX(interp_4tap_vert_ps_8x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].filter_vps = PFX(interp_4tap_vert_ps_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x6].filter_vps = PFX(interp_4tap_vert_ps_8x6_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].filter_vps = PFX(interp_4tap_vert_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].filter_vps = PFX(interp_4tap_vert_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].filter_vps = PFX(interp_4tap_vert_ps_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].filter_vps = PFX(interp_4tap_vert_ps_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].filter_vps = PFX(interp_4tap_vert_ps_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].filter_vps = PFX(interp_4tap_vert_ps_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].filter_vps = PFX(interp_4tap_vert_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].filter_vps = PFX(interp_4tap_vert_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].filter_vps = PFX(interp_4tap_vert_ps_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].filter_vps = PFX(interp_4tap_vert_ps_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].filter_vps = PFX(interp_4tap_vert_ps_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].filter_vps = PFX(interp_4tap_vert_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].filter_vps = PFX(interp_4tap_vert_ps_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].filter_vps = PFX(interp_4tap_vert_ps_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].filter_vps = PFX(interp_4tap_vert_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].filter_vps = PFX(interp_4tap_vert_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].filter_vps = PFX(interp_4tap_vert_ps_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].filter_vps = PFX(interp_4tap_vert_ps_8x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].filter_vps = PFX(interp_4tap_vert_ps_8x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].filter_vps = PFX(interp_4tap_vert_ps_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].filter_vps = PFX(interp_4tap_vert_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].filter_vps = PFX(interp_4tap_vert_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].filter_vps = PFX(interp_4tap_vert_ps_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].filter_vps = PFX(interp_4tap_vert_ps_16x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].filter_vps = PFX(interp_4tap_vert_ps_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].filter_vps = PFX(interp_4tap_vert_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].filter_vps = PFX(interp_4tap_vert_ps_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].filter_vps = PFX(interp_4tap_vert_ps_32x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].filter_vps = PFX(interp_4tap_vert_ps_24x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x4].filter_vps = PFX(interp_4tap_vert_ps_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x8].filter_vps = PFX(interp_4tap_vert_ps_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x16].filter_vps = PFX(interp_4tap_vert_ps_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x32].filter_vps = PFX(interp_4tap_vert_ps_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x4].filter_vps = PFX(interp_4tap_vert_ps_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x8].filter_vps = PFX(interp_4tap_vert_ps_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x12].filter_vps = PFX(interp_4tap_vert_ps_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x16].filter_vps = PFX(interp_4tap_vert_ps_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x32].filter_vps = PFX(interp_4tap_vert_ps_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x64].filter_vps = PFX(interp_4tap_vert_ps_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x8].filter_vps = PFX(interp_4tap_vert_ps_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x16].filter_vps = PFX(interp_4tap_vert_ps_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x32].filter_vps = PFX(interp_4tap_vert_ps_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x64].filter_vps = PFX(interp_4tap_vert_ps_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x16].filter_vps = PFX(interp_4tap_vert_ps_64x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x32].filter_vps = PFX(interp_4tap_vert_ps_64x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x48].filter_vps = PFX(interp_4tap_vert_ps_64x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x64].filter_vps = PFX(interp_4tap_vert_ps_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_24x32].filter_vps = PFX(interp_4tap_vert_ps_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_48x64].filter_vps = PFX(interp_4tap_vert_ps_48x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x2].filter_vsp = PFX(interp_4tap_vert_sp_8x2_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x4].filter_vsp = PFX(interp_4tap_vert_sp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x6].filter_vsp = PFX(interp_4tap_vert_sp_8x6_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x8].filter_vsp = PFX(interp_4tap_vert_sp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x16].filter_vsp = PFX(interp_4tap_vert_sp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_8x32].filter_vsp = PFX(interp_4tap_vert_sp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x4].filter_vsp = PFX(interp_4tap_vert_sp_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x8].filter_vsp = PFX(interp_4tap_vert_sp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x12].filter_vsp = PFX(interp_4tap_vert_sp_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x16].filter_vsp = PFX(interp_4tap_vert_sp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_16x32].filter_vsp = PFX(interp_4tap_vert_sp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x8].filter_vsp = PFX(interp_4tap_vert_sp_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x16].filter_vsp = PFX(interp_4tap_vert_sp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x24].filter_vsp = PFX(interp_4tap_vert_sp_32x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_32x32].filter_vsp = PFX(interp_4tap_vert_sp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I420].pu[CHROMA_420_24x32].filter_vsp = PFX(interp_4tap_vert_sp_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x4].filter_vsp = PFX(interp_4tap_vert_sp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x8].filter_vsp = PFX(interp_4tap_vert_sp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x16].filter_vsp = PFX(interp_4tap_vert_sp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x32].filter_vsp = PFX(interp_4tap_vert_sp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x12].filter_vsp = PFX(interp_4tap_vert_sp_8x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_8x64].filter_vsp = PFX(interp_4tap_vert_sp_8x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x8].filter_vsp = PFX(interp_4tap_vert_sp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x16].filter_vsp = PFX(interp_4tap_vert_sp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x32].filter_vsp = PFX(interp_4tap_vert_sp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x64].filter_vsp = PFX(interp_4tap_vert_sp_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_16x24].filter_vsp = PFX(interp_4tap_vert_sp_16x24_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x16].filter_vsp = PFX(interp_4tap_vert_sp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x32].filter_vsp = PFX(interp_4tap_vert_sp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x64].filter_vsp = PFX(interp_4tap_vert_sp_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_32x48].filter_vsp = PFX(interp_4tap_vert_sp_32x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I422].pu[CHROMA_422_24x64].filter_vsp = PFX(interp_4tap_vert_sp_24x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x4].filter_vsp = PFX(interp_4tap_vert_sp_8x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x8].filter_vsp = PFX(interp_4tap_vert_sp_8x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x16].filter_vsp = PFX(interp_4tap_vert_sp_8x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_8x32].filter_vsp = PFX(interp_4tap_vert_sp_8x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x4].filter_vsp = PFX(interp_4tap_vert_sp_16x4_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x8].filter_vsp = PFX(interp_4tap_vert_sp_16x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x12].filter_vsp = PFX(interp_4tap_vert_sp_16x12_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x16].filter_vsp = PFX(interp_4tap_vert_sp_16x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x32].filter_vsp = PFX(interp_4tap_vert_sp_16x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_16x64].filter_vsp = PFX(interp_4tap_vert_sp_16x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x8].filter_vsp = PFX(interp_4tap_vert_sp_32x8_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x16].filter_vsp = PFX(interp_4tap_vert_sp_32x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x32].filter_vsp = PFX(interp_4tap_vert_sp_32x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_32x64].filter_vsp = PFX(interp_4tap_vert_sp_32x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x16].filter_vsp = PFX(interp_4tap_vert_sp_64x16_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x32].filter_vsp = PFX(interp_4tap_vert_sp_64x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x48].filter_vsp = PFX(interp_4tap_vert_sp_64x48_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_64x64].filter_vsp = PFX(interp_4tap_vert_sp_64x64_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_24x32].filter_vsp = PFX(interp_4tap_vert_sp_24x32_neon);
arm/asm-primitives.cpp:        p.chroma[X265_CSP_I444].pu[LUMA_48x64].filter_vsp = PFX(interp_4tap_vert_sp_48x64_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].dct = PFX(dct_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].dct = PFX(dct_8x8_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_16x16].dct = PFX(dct_16x16_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_4x4].psy_cost_pp = PFX(psyCost_4x4_neon);
arm/asm-primitives.cpp:        p.cu[BLOCK_8x8].psy_cost_pp = PFX(psyCost_8x8_neon);
arm/dct-a.S:function x265_dct_4x4_neon
arm/dct-a.S:function x265_dct_8x8_neon
arm/dct-a.S:function x265_dct_16x16_neon
arm/sad-a.S:function x265_pixel_sad_8x\h\()_neon
arm/sad-a.S:function x265_pixel_sad_16x\h\()_neon
arm/sad-a.S:function x265_pixel_sad_32x\h\()_neon
arm/sad-a.S:function x265_pixel_sad_64x\h\()_neon
arm/sad-a.S:function x265_pixel_sad_24x32_neon
arm/sad-a.S:function x265_pixel_sad_48x64_neon
arm/sad-a.S:function x265_sad_x\x\()_4x\h\()_neon
arm/sad-a.S:function x265_sad_x\x\()_8x\h\()_neon
arm/sad-a.S:function x265_sad_x\x\()_16x\h\()_neon
arm/sad-a.S:function x265_sad_x\x\()_16x\h\()_neon
arm/sad-a.S:function x265_sad_x\x\()_32x\h\()_neon
arm/sad-a.S:function x265_sad_x\x\()_64x\h\()_neon
arm/sad-a.S:function x265_sad_x\x\()_48x64_neon
arm/sad-a.S:function x265_sad_x\x\()_24x32_neon
arm/sad-a.S:function x265_sad_x\x\()_12x16_neon
arm/sad-a.S:function x265_pixel_sad_12x16_neon
cpu.cpp:void PFX(cpu_neon_test)(void);
cpu.cpp:int PFX(cpu_fast_neon_mrc_test)(void);
cpu.cpp:    PFX(cpu_neon_test)();
cpu.cpp:    flags |= PFX(cpu_fast_neon_mrc_test)() ? X265_CPU_FAST_NEON_MRC : 0;
primitives.cpp:void PFX(cpu_neon_test)(void) {}
primitives.cpp:int PFX(cpu_fast_neon_mrc_test)(void) { return 0; }
